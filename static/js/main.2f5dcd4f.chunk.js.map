{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectUser","input","handleChange","select","handleSelectChange","className","htmlFor","type","name","id","value","onChange","map","todo","classNames","completed","readOnly","title","onClick","userId","getData","url","fetch","then","response","json","CurrentUser","state","user","a","this","loadUser","prevProps","props","setState","email","phone","removeUser","React","Component","App","selectedUserId","handleClear","event","target","preparedTododos","isCompleted","filter","toLowerCase","includes","todosFromServer","preparedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f5dcd4f.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  todos: Todo[]\n  selectUser: (userId: number) => void,\n  input: string,\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  handleSelectChange: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  select: string,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUser,\n  input,\n  handleChange,\n  select,\n  handleSelectChange,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <label htmlFor=\"input\">\n      Filter by Title:\n      {' '}\n      <input\n        type=\"text\"\n        name=\"input\"\n        id=\"input\"\n        value={input}\n        onChange={handleChange}\n      />\n      <select\n        name=\"select\"\n        value={select}\n        onChange={handleSelectChange}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"completed\">Completed</option>\n        <option value=\"not\">Not completed</option>\n      </select>\n    </label>\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames(\n              'TodoList__item',\n              { 'TodoList__item--checked': todo.completed },\n              { 'TodoList__item--unchecked': !todo.completed },\n            )}\n          >\n            <label htmlFor={`${todo.id}`}>\n              <input\n                id={`${todo.id}`}\n                type=\"checkbox\"\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n            <button\n              className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n              type=\"button\"\n              onClick={() => selectUser(todo.userId)}\n            >\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst BASE_URL = 'https://mate.academy/students-api/';\n\nconst getData = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n};\n\nexport const getTodos = (): Promise<Todo[]> => getData('todos');\n\nexport const getUser = (userId: number): Promise<User> => getData(`users/${userId}`);\n","import React from 'react';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n  removeUser: () => void;\n};\n\ntype State = {\n  user: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  async componentDidMount() {\n    this.loadUser();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const user: User = await getUser(this.props.userId);\n\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    if (!this.state.user) {\n      return (\n        <span>\n          No user\n        </span>\n      );\n    }\n\n    const {\n      name,\n      id,\n      email,\n      phone,\n    } = this.state.user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">\n          {name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {phone}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={() => this.props.removeUser()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\ninterface State {\n  todos: Todo[],\n  selectedUserId: number;\n  input: string,\n  select: string,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n    input: '',\n    select: '',\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getTodos();\n\n    this.setState({\n      todos: todosFromServer,\n    });\n  }\n\n  handleClear = () => {\n    this.selectUser(0);\n  };\n\n  selectUser = (userId: number) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      input: value,\n    });\n  };\n\n  handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      select: value,\n    });\n  };\n\n  preparedTododos = () => {\n    const { todos, input, select } = this.state;\n    let isCompleted: boolean;\n\n    switch (select) {\n      case 'not':\n        isCompleted = false;\n        break;\n      case 'completed':\n        isCompleted = true;\n        break;\n      default:\n        return todos\n          .filter(todo => (\n            todo.title.toLowerCase()\n              .includes(input.toLowerCase())\n          ));\n    }\n\n    return todos\n      .filter(todo => (\n        todo.title.toLowerCase()\n          .includes(input.toLowerCase())\n        && (isCompleted\n          ? todo.completed\n          : !todo.completed\n        )\n      ));\n  };\n\n  render() {\n    const {\n      selectedUserId,\n      select,\n      input,\n    } = this.state;\n\n    const preparedTodos = this.preparedTododos();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            select={select}\n            handleChange={this.handleChange}\n            input={input}\n            todos={preparedTodos}\n            selectUser={this.selectUser}\n            handleSelectChange={this.handleSelectChange}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                removeUser={this.handleClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}